serviceAccount: 'projects/$PROJECT_ID/serviceAccounts/answer-app-cloudbuild@$PROJECT_ID.iam.gserviceaccount.com'

options:
  automapSubstitutions: true
  dynamicSubstitutions: true
  logging: 'LEGACY'
  defaultLogsBucketBehavior: 'REGIONAL_USER_OWNED_BUCKET'

substitutions:
  _REPO_ID: 'answer-app'
  _REPO_NAME: '${LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_ID}'
  _DOCKER_IMAGE_ANSWER_APP: '${_REPO_NAME}/answer-app'
  _DOCKER_IMAGE_ANSWER_APP_CLIENT: '${_REPO_NAME}/answer-app-client'
  _TF_VAR_DOCKER_IMAGE: |
    {
      "answer-app": "${_DOCKER_IMAGE_ANSWER_APP}:${BUILD_ID}",
      "answer-app-client": "${_DOCKER_IMAGE_ANSWER_APP_CLIENT}:${BUILD_ID}"
    }
  # _RUN_TYPE will be 'plan' by default. Override with 'apply' to apply changes.
  _RUN_TYPE: 'plan'

steps:
- id: tree
  name: 'alpine'
  script: apk add --no-cache tree && echo "" && tree -a && echo ""

- id: build-answer-app-backend
  name: 'gcr.io/cloud-builders/docker'
  waitFor: ['tree']
  dir: 'src/backend'
  args: [
    'build',
    '-t', '${_DOCKER_IMAGE_ANSWER_APP}:latest',
    '-t', '${_DOCKER_IMAGE_ANSWER_APP}:${BUILD_ID}',
    '-f', 'Dockerfile',
    '.'
  ]

- id: push-answer-app-backend
  name: 'gcr.io/cloud-builders/docker'
  waitFor: ['build-answer-app-backend']
  dir: 'src/backend'
  args: ['push', '--all-tags', '${_DOCKER_IMAGE_ANSWER_APP}']

- id: build-answer-app-client
  name: 'gcr.io/cloud-builders/docker'
  waitFor: ['tree']
  dir: 'src/client'
  args: [
    'build',
    '-t', '${_DOCKER_IMAGE_ANSWER_APP_CLIENT}:latest',
    '-t', '${_DOCKER_IMAGE_ANSWER_APP_CLIENT}:${BUILD_ID}',
    '-f', 'Dockerfile',
    '.'
  ]

- id: push-answer-app-client
  name: 'gcr.io/cloud-builders/docker'
  waitFor: ['build-answer-app-client']
  dir: 'src/client'
  args: ['push', '--all-tags', '${_DOCKER_IMAGE_ANSWER_APP_CLIENT}']

# test image names in the terraform builder
- id: test_image_names
  name: 'hashicorp/terraform:latest'
  env:
    - TF_VAR_docker_image=${_TF_VAR_DOCKER_IMAGE}
  script: |
    echo ""
    echo "TF_VAR_docker_image:"
    echo ""
    echo "${TF_VAR_docker_image}"
    echo ""

- id: init
  name: 'hashicorp/terraform:latest'
  dir: 'terraform/main'
  script: |
    echo ""
    terraform init -reconfigure -backend-config="bucket=terraform-state-${PROJECT_ID}" -backend-config="impersonate_service_account=terraform-service-account@${PROJECT_ID}.iam.gserviceaccount.com"
    echo ""
    echo "Terraform version:"
    echo ""
    terraform version
    echo ""
    echo "Terraform workspace: $(terraform workspace list)"
    echo ""

- id: validate
  name: 'hashicorp/terraform:latest'
  dir: 'terraform/main'
  args: ['validate']

# Display the format diff. Don't write changes.
- id: fmt
  name: 'hashicorp/terraform:latest'
  dir: 'terraform/main'
  args: ['fmt', '-recursive', '-diff', '-write=false']

- id: plan
  name: 'hashicorp/terraform:latest'
  dir: 'terraform/main'
  env:
    - TF_VAR_project_id=${PROJECT_ID}
    - TF_VAR_terraform_service_account=terraform-service-account@${PROJECT_ID}.iam.gserviceaccount.com
    - TF_VAR_docker_image=${_TF_VAR_DOCKER_IMAGE}
  args: ['plan', '-input=false', '-out', '.terraform/tfplan']

- id: apply
  name: 'hashicorp/terraform:latest'
  dir: 'terraform/main'
  script: |
    echo ""
    echo "Detected '_RUN_TYPE' value: '${_RUN_TYPE}'"
    echo ""
    if [ "${_RUN_TYPE}" = "apply" ]; then
      terraform apply -auto-approve -input=false .terraform/tfplan
    else
      echo "'_RUN_TYPE' substitution override not received. Defaulting to plan-only and skipping apply"
    fi
    echo ""
